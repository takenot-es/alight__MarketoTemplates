/* Spacing and heights  */
// Heights
@each $value in $sizing-values {
    .height__viewport-#{$value} {
        height: 100%;
        min-height: #{$value}vh;
    }

    .height__percent-#{$value} {
        height: #{$value} + "%";
    }    
}






@each $breakpoint-title, $breakpoint-value in $grid-breakpoints {

    @if $breakpoint-value == 0 {
        @each $side in $sides {
            @if $side == "top" or $side =="bottom" {
                .margin__#{$side}-auto, .margin__y-auto, .margin__auto {
                    margin-#{$side}: auto !important;
                }
            }

            @if $side == "left" or $side =="right" {
                .margin__#{$side}-auto, .margin__x-auto, .margin__auto {
                    margin-#{$side}: auto !important;
                }
            }
        }

        // Padding and margin loop
        @each $spacing-title, $spacing-value in $spacers {
            @each $side in $sides {
                @each $unit in $units {
                    @if $side == "top" or $side == "bottom" {
                        .#{$unit}__#{$side}-#{$spacing-title }, .#{$unit}__y-#{$spacing-title }, .#{$unit}__#{$spacing-title } {
                            #{$unit}-#{$side}: $spacing-value !important;
                        }

                    }   

                    @if $side == "left" or $side == "right" {
                        .#{$unit}__#{$side}-#{$spacing-title }, .#{$unit}__x-#{$spacing-title }, .#{$unit}__#{$spacing-title } {
                            #{$unit}-#{$side}: $spacing-value !important;
                        }
                    }
                }
            }
        }

    }

    @if $breakpoint-value != 0 {


        /* Spacing and heights for #{$breakpoint-title} screens  */
        @media screen and (min-width: $breakpoint-value) {



            // heights
            @each $value in $sizing-values {
                .height__viewport-#{$breakpoint-title}-#{$value} {
                    height: 100%;
                    min-height: #{$value}vh;
                }

                .height__percent-#{$breakpoint-title}-#{$value} {
                    height: #{$value} + "%";
                }
            }

            @each $side in $sides {
                @if $side == "top" or $side =="bottom" {
                    .margin__#{$side}-#{$breakpoint-title}-auto, .margin__y-#{$breakpoint-title}-auto, .margin__#{$breakpoint-title}-auto {
                        margin-#{$side}: auto;
                    }
                }
    
                @if $side == "left" or $side =="right" {
                    .margin__#{$side}-#{$breakpoint-title}-auto, .margin__x-#{$breakpoint-title}-auto, .margin__#{$breakpoint-title}-auto {
                        margin-#{$side}: auto;
                    }
                }
            }

            
            // Padding and margin loop
            @each $spacing-title, $spacing-value in $spacers {
                @each $side in $sides {
                    @each $unit in $units {
                        @if $side == "top" or $side == "bottom" {
                            .#{$unit}__#{$side}-#{$breakpoint-title}-#{$spacing-title }, .#{$unit}__y-#{$breakpoint-title}-#{$spacing-title }, .#{$unit}__#{$breakpoint-title}-#{$spacing-title } {
                                #{$unit}-#{$side}: $spacing-value !important;
                            }
                        }
            
                        @if $side == "left" or $side == "right" {
                            .#{$unit}__#{$side}-#{$breakpoint-title}-#{$spacing-title }, .#{$unit}__x-#{$breakpoint-title}-#{$spacing-title }, .#{$unit}__#{$breakpoint-title}-#{$spacing-title } {
                                #{$unit}-#{$side}: $spacing-value !important;
                            }
                        }
                    }
                }
            }
        }
    }   
}
